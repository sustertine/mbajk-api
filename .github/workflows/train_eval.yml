on:
  workflow_run:
    workflows: [ "Data pipeline" ]
    types:
      - completed

jobs:
  install-env:
    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install
          

      - name: Cache .venv directory
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

  train_eval_models:
    runs-on: ubuntu-20.04
    needs: [ split_data ]
    env:
      MBAJK_URL: ${{ secrets.MBAJK_URL }}
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Uncache venv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Git & Dvc pull
        run: |
          git fetch origin
          git pull
          poetry run dvc pull -r origin

      - name: Run validate data script
        run: |
          poetry run python src/models/train_eval_models.py

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

