name: Data Pipeline

on:
  schedule:
    - cron: '0 * * * *'
  push:
    branches: [ develop ]

jobs:
  test:
    if: false # temporary
    runs-on: ubuntu-20.04
    env:
      MBAJK_URL: ${{ secrets.MBAJK_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install
      - name: Run tests
        run: |
          poetry run pytest

  fetch_data_mbajk:
    #    needs: test
    runs-on: ubuntu-20.04
    env:
      MBAJK_URL: ${{ secrets.MBAJK_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install

      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Dvc pull
        run: |
          poetry run dvc pull -r origin

      - name: Run fetch data script
        run: |
          poetry run python src/data/fetch_data.py

      - name: Commit changes to DVC
        run: |
          poetry run dvc add data/raw/mbajk/
          poetry run dvc push -r origin

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "Update data" --allow-empty)
          git push
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  fetch_data_weather:
    runs-on: ubuntu-20.04
    needs: fetch_data_mbajk
    env:
      MBAJK_URL: ${{ secrets.MBAJK_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install

      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Dvc pull
        run: |
          poetry run dvc pull -r origin

      - name: Run fetch weather script
        run: |
          poetry run python src/data/fetch_weather.py

      - name: Commit DVC changes
        run: |
          poetry run dvc add data/raw/weather
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push DVC changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "Update data" --allow-empty)
          git push
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  process_data:
    runs-on: ubuntu-20.04
    needs: fetch_data_weather
    env:
      MBAJK_URL: ${{ secrets.MBAJK_URL }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry env use python3.10
          poetry install

      - name: Configure DVC
        run: |
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Dvc pull
        run: |
          poetry run dvc pull -r origin

      - name: Run process data script
        run: |
          poetry run python src/data/process_data.py

      - name: Commit DVC changes
        run: |
          poetry run dvc add data/processed/mbajk
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push DVC changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "Update data" --allow-empty)
          git push
          poetry run dvc push -r origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
